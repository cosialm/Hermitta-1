"""Initial migration of core models

Revision ID: e88432ca6579
Revises:
Create Date: 2025-06-21 00:37:53.862729

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'e88432ca6579'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('phone_number', sa.String(length=20), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('first_name', sa.String(length=50), nullable=False),
    sa.Column('last_name', sa.String(length=50), nullable=False),
    sa.Column('role', sa.Enum('LANDLORD', 'TENANT', 'STAFF', 'VENDOR', 'ACCOUNTANT', 'ADMIN', name='userrole'), nullable=False),
    sa.Column('is_phone_verified', sa.Boolean(), nullable=False),
    sa.Column('phone_verification_otp', sa.String(length=10), nullable=True),
    sa.Column('phone_verification_otp_expires_at', sa.DateTime(), nullable=True),
    sa.Column('kra_pin', sa.String(length=20), nullable=True),
    sa.Column('preferred_login_method', sa.Enum('EMAIL', 'PHONE', name='preferredloginmethod'), nullable=False),
    sa.Column('preferred_language', sa.Enum('EN_KE', 'SW_KE', name='preferredlanguage'), nullable=False),
    sa.Column('last_consent_review_date', sa.Date(), nullable=True),
    sa.Column('data_processing_consent_details', sa.JSON(), nullable=True),
    sa.Column('company_name', sa.String(length=100), nullable=True),
    sa.Column('staff_permissions', sa.JSON(), nullable=True),
    sa.Column('vendor_services_offered', sa.JSON(), nullable=True),
    sa.Column('vendor_rating_average', sa.Numeric(precision=3, scale=2), nullable=True),
    sa.Column('vendor_total_ratings_count', sa.Integer(), nullable=True),
    sa.Column('is_verified_vendor', sa.Boolean(), nullable=True),
    sa.Column('otp_secret', sa.String(length=255), nullable=True),
    sa.Column('is_mfa_enabled', sa.Boolean(), nullable=False),
    sa.Column('otp_backup_codes', sa.JSON(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('user_id')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_users_is_active'), ['is_active'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_kra_pin'), ['kra_pin'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_phone_number'), ['phone_number'], unique=True)

    op.create_table('properties',
    sa.Column('property_id', sa.Integer(), nullable=False),
    sa.Column('landlord_id', sa.Integer(), nullable=False),
    sa.Column('address_line_1', sa.String(length=255), nullable=False),
    sa.Column('city', sa.String(length=100), nullable=False),
    sa.Column('county', sa.String(length=100), nullable=False),
    sa.Column('property_type', sa.Enum('APARTMENT_UNIT', 'BEDSITTER', 'SINGLE_ROOM', 'STUDIO_APARTMENT', 'TOWNHOUSE', 'MAISONETTE', 'BUNGALOW', 'OWN_COMPOUND_HOUSE', 'COMMERCIAL_PROPERTY', name='propertytype'), nullable=False),
    sa.Column('num_bedrooms', sa.Integer(), nullable=False),
    sa.Column('num_bathrooms', sa.Integer(), nullable=False),
    sa.Column('unit_number', sa.String(length=50), nullable=True),
    sa.Column('estate_neighborhood', sa.String(length=100), nullable=True),
    sa.Column('ward', sa.String(length=100), nullable=True),
    sa.Column('sub_county', sa.String(length=100), nullable=True),
    sa.Column('address_line_2', sa.String(length=255), nullable=True),
    sa.Column('postal_code', sa.String(length=20), nullable=True),
    sa.Column('size_sqft', sa.Integer(), nullable=True),
    sa.Column('amenities', sa.JSON(), nullable=True),
    sa.Column('photos_urls', sa.JSON(), nullable=True),
    sa.Column('main_photo_url', sa.String(length=512), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('status', sa.Enum('VACANT', 'OCCUPIED', 'UNDER_MAINTENANCE', name='propertystatus'), nullable=False),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['landlord_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('property_id')
    )
    with op.batch_alter_table('properties', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_properties_city'), ['city'], unique=False)
        batch_op.create_index(batch_op.f('ix_properties_county'), ['county'], unique=False)
        batch_op.create_index(batch_op.f('ix_properties_estate_neighborhood'), ['estate_neighborhood'], unique=False)
        batch_op.create_index(batch_op.f('ix_properties_landlord_id'), ['landlord_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_properties_sub_county'), ['sub_county'], unique=False)
        batch_op.create_index(batch_op.f('ix_properties_unit_number'), ['unit_number'], unique=False)
        batch_op.create_index(batch_op.f('ix_properties_ward'), ['ward'], unique=False)

    op.create_table('leases',
    sa.Column('lease_id', sa.Integer(), nullable=False),
    sa.Column('property_id', sa.Integer(), nullable=False),
    sa.Column('landlord_id', sa.Integer(), nullable=False),
    sa.Column('tenant_id', sa.Integer(), nullable=True),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=False),
    sa.Column('rent_amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('rent_due_day', sa.Integer(), nullable=False),
    sa.Column('move_in_date', sa.Date(), nullable=False),
    sa.Column('status', sa.Enum('DRAFT', 'PENDING_SIGNATURES', 'ACTIVE_PENDING_MOVE_IN', 'ACTIVE', 'EXPIRED_PENDING_RENEWAL', 'EXPIRED', 'TERMINATED_EARLY', 'CANCELLED', 'RENEWED', name='leasestatustype'), nullable=False),
    sa.Column('signing_status', sa.Enum('NOT_STARTED', 'DRAFT', 'SENT_FOR_SIGNATURE', 'PARTIALLY_SIGNED', 'FULLY_SIGNED_SYSTEM', 'FULLY_SIGNED_UPLOADED', 'DECLINED', 'EXPIRED', 'CANCELLED', 'SUPERSEDED', name='leasesigningstatus'), nullable=False),
    sa.Column('tenant_national_id', sa.String(length=30), nullable=True),
    sa.Column('tenant_name_manual', sa.String(length=100), nullable=True),
    sa.Column('tenant_phone_number_manual', sa.String(length=20), nullable=True),
    sa.Column('tenant_email_manual', sa.String(length=120), nullable=True),
    sa.Column('rent_start_date', sa.Date(), nullable=True),
    sa.Column('security_deposit', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('lease_document_url', sa.String(length=512), nullable=True),
    sa.Column('lease_document_version', sa.Integer(), nullable=False),
    sa.Column('lease_document_uploaded_at', sa.DateTime(), nullable=True),
    sa.Column('lease_document_uploaded_by_user_id', sa.Integer(), nullable=True),
    sa.Column('generated_from_template_id', sa.Integer(), nullable=True),
    sa.Column('lease_document_content_final', sa.Text(), nullable=True),
    sa.Column('signature_requests', sa.JSON(), nullable=True),
    sa.Column('signed_lease_document_id', sa.Integer(), nullable=True),
    sa.Column('additional_signed_document_ids', sa.JSON(), nullable=True),
    sa.Column('renewal_notice_reminder_date', sa.Date(), nullable=True),
    sa.Column('termination_notice_reminder_date', sa.Date(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['landlord_id'], ['users.user_id'], ),
    sa.ForeignKeyConstraint(['lease_document_uploaded_by_user_id'], ['users.user_id'], ),
    sa.ForeignKeyConstraint(['property_id'], ['properties.property_id'], ),
    sa.ForeignKeyConstraint(['tenant_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('lease_id')
    )
    with op.batch_alter_table('leases', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_leases_landlord_id'), ['landlord_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_leases_property_id'), ['property_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_leases_tenant_id'), ['tenant_id'], unique=False)

    op.create_table('maintenance_requests',
    sa.Column('request_id', sa.Integer(), nullable=False),
    sa.Column('property_id', sa.Integer(), nullable=False),
    sa.Column('created_by_user_id', sa.Integer(), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('category', sa.Enum('PLUMBING', 'ELECTRICAL', 'APPLIANCE_REPAIR', 'STRUCTURAL_ISSUE', 'PEST_CONTROL', 'HVAC', 'PAINTING', 'LANDSCAPING_GARDENING', 'COMMON_AREA', 'OTHER', name='maintenancerequestcategory'), nullable=False),
    sa.Column('tenant_id', sa.Integer(), nullable=True),
    sa.Column('priority', sa.Enum('LOW', 'MEDIUM', 'HIGH', 'URGENT', name='maintenancepriority'), nullable=False),
    sa.Column('status', sa.Enum('SUBMITTED_BY_TENANT', 'ACKNOWLEDGED_BY_LANDLORD', 'PENDING_VENDOR_ASSIGNMENT', 'AWAITING_VENDOR_ACCEPTANCE', 'VENDOR_ACCEPTED', 'VENDOR_REJECTED', 'AWAITING_QUOTE_SUBMISSION', 'QUOTE_SUBMITTED_BY_VENDOR', 'QUOTE_APPROVED_BY_LANDLORD', 'QUOTE_REJECTED_BY_LANDLORD', 'WORK_SCHEDULED', 'WORK_IN_PROGRESS', 'WORK_PAUSED_AWAITING_PARTS', 'WORK_COMPLETED_BY_VENDOR', 'PENDING_LANDLORD_STAFF_VERIFICATION', 'PENDING_TENANT_CONFIRMATION', 'COMPLETED_CONFIRMED', 'INVOICE_SUBMITTED_BY_VENDOR', 'PAYMENT_PROCESSING_FOR_INVOICE', 'CLOSED_COMPLETED', 'CLOSED_CANCELLED', 'CLOSED_REJECTED_BY_LANDLORD', name='maintenancerequeststatus'), nullable=False),
    sa.Column('tenant_contact_preference', sa.String(length=255), nullable=True),
    sa.Column('initial_photo_urls', sa.JSON(), nullable=True),
    sa.Column('assigned_to_user_id', sa.Integer(), nullable=True),
    sa.Column('assigned_vendor_name_manual', sa.String(length=100), nullable=True),
    sa.Column('vendor_assigned_at', sa.DateTime(), nullable=True),
    sa.Column('scheduled_date', sa.Date(), nullable=True),
    sa.Column('resolution_notes', sa.Text(), nullable=True),
    sa.Column('actual_cost', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('tenant_feedback_rating', sa.Integer(), nullable=True),
    sa.Column('tenant_feedback_comment', sa.Text(), nullable=True),
    sa.Column('resolved_by_user_id', sa.Integer(), nullable=True),
    sa.Column('quote_id', sa.Integer(), nullable=True),
    sa.Column('vendor_invoice_id', sa.Integer(), nullable=True),
    sa.Column('submitted_at', sa.DateTime(), nullable=False),
    sa.Column('acknowledged_at', sa.DateTime(), nullable=True),
    sa.Column('vendor_accepted_at', sa.DateTime(), nullable=True),
    sa.Column('quote_approved_at', sa.DateTime(), nullable=True),
    sa.Column('work_started_at', sa.DateTime(), nullable=True),
    sa.Column('work_completed_at', sa.DateTime(), nullable=True),
    sa.Column('tenant_confirmed_at', sa.DateTime(), nullable=True),
    sa.Column('invoice_submitted_at', sa.DateTime(), nullable=True),
    sa.Column('closed_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['assigned_to_user_id'], ['users.user_id'], ),
    sa.ForeignKeyConstraint(['created_by_user_id'], ['users.user_id'], ),
    sa.ForeignKeyConstraint(['property_id'], ['properties.property_id'], ),
    sa.ForeignKeyConstraint(['resolved_by_user_id'], ['users.user_id'], ),
    sa.ForeignKeyConstraint(['tenant_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('request_id')
    )
    with op.batch_alter_table('maintenance_requests', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_maintenance_requests_assigned_to_user_id'), ['assigned_to_user_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_maintenance_requests_created_by_user_id'), ['created_by_user_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_maintenance_requests_property_id'), ['property_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_maintenance_requests_quote_id'), ['quote_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_maintenance_requests_resolved_by_user_id'), ['resolved_by_user_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_maintenance_requests_status'), ['status'], unique=False)
        batch_op.create_index(batch_op.f('ix_maintenance_requests_tenant_id'), ['tenant_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_maintenance_requests_vendor_invoice_id'), ['vendor_invoice_id'], unique=False)

    op.create_table('financial_transactions',
    sa.Column('transaction_id', sa.Integer(), nullable=False),
    sa.Column('landlord_id', sa.Integer(), nullable=False),
    sa.Column('type', sa.Enum('INCOME', 'EXPENSE', name='financialtransactiontype'), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=False),
    sa.Column('amount', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('transaction_date', sa.Date(), nullable=False),
    sa.Column('property_id', sa.Integer(), nullable=True),
    sa.Column('lease_id', sa.Integer(), nullable=True),
    sa.Column('related_payment_id', sa.Integer(), nullable=True),
    sa.Column('maintenance_request_id', sa.Integer(), nullable=True),
    sa.Column('document_id', sa.Integer(), nullable=True),
    sa.Column('vendor_name', sa.String(length=100), nullable=True),
    sa.Column('sub_category', sa.String(length=100), nullable=True),
    sa.Column('is_recurring', sa.Boolean(), nullable=False),
    sa.Column('recurrence_frequency', sa.Enum('DAILY', 'WEEKLY', 'MONTHLY', 'QUARTERLY', 'ANNUALLY', 'BI_ANNUALLY', 'EVERY_TWO_MONTHS', name='recurrencefrequency'), nullable=True),
    sa.Column('recurrence_end_date', sa.Date(), nullable=True),
    sa.Column('next_due_date', sa.Date(), nullable=True),
    sa.Column('parent_recurring_transaction_id', sa.Integer(), nullable=True),
    sa.Column('is_tax_deductible_candidate', sa.Boolean(), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['landlord_id'], ['users.user_id'], ),
    sa.ForeignKeyConstraint(['lease_id'], ['leases.lease_id'], ),
    sa.ForeignKeyConstraint(['parent_recurring_transaction_id'], ['financial_transactions.transaction_id'], ),
    sa.ForeignKeyConstraint(['property_id'], ['properties.property_id'], ),
    sa.PrimaryKeyConstraint('transaction_id')
    )
    with op.batch_alter_table('financial_transactions', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_financial_transactions_category_id'), ['category_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_financial_transactions_document_id'), ['document_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_financial_transactions_landlord_id'), ['landlord_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_financial_transactions_lease_id'), ['lease_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_financial_transactions_maintenance_request_id'), ['maintenance_request_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_financial_transactions_next_due_date'), ['next_due_date'], unique=False)
        batch_op.create_index(batch_op.f('ix_financial_transactions_property_id'), ['property_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_financial_transactions_related_payment_id'), ['related_payment_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_financial_transactions_transaction_date'), ['transaction_date'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('financial_transactions', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_financial_transactions_transaction_date'))
        batch_op.drop_index(batch_op.f('ix_financial_transactions_related_payment_id'))
        batch_op.drop_index(batch_op.f('ix_financial_transactions_property_id'))
        batch_op.drop_index(batch_op.f('ix_financial_transactions_next_due_date'))
        batch_op.drop_index(batch_op.f('ix_financial_transactions_maintenance_request_id'))
        batch_op.drop_index(batch_op.f('ix_financial_transactions_lease_id'))
        batch_op.drop_index(batch_op.f('ix_financial_transactions_landlord_id'))
        batch_op.drop_index(batch_op.f('ix_financial_transactions_document_id'))
        batch_op.drop_index(batch_op.f('ix_financial_transactions_category_id'))

    op.drop_table('financial_transactions')
    with op.batch_alter_table('maintenance_requests', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_maintenance_requests_vendor_invoice_id'))
        batch_op.drop_index(batch_op.f('ix_maintenance_requests_tenant_id'))
        batch_op.drop_index(batch_op.f('ix_maintenance_requests_status'))
        batch_op.drop_index(batch_op.f('ix_maintenance_requests_resolved_by_user_id'))
        batch_op.drop_index(batch_op.f('ix_maintenance_requests_quote_id'))
        batch_op.drop_index(batch_op.f('ix_maintenance_requests_property_id'))
        batch_op.drop_index(batch_op.f('ix_maintenance_requests_created_by_user_id'))
        batch_op.drop_index(batch_op.f('ix_maintenance_requests_assigned_to_user_id'))

    op.drop_table('maintenance_requests')
    with op.batch_alter_table('leases', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_leases_tenant_id'))
        batch_op.drop_index(batch_op.f('ix_leases_property_id'))
        batch_op.drop_index(batch_op.f('ix_leases_landlord_id'))

    op.drop_table('leases')
    with op.batch_alter_table('properties', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_properties_ward'))
        batch_op.drop_index(batch_op.f('ix_properties_unit_number'))
        batch_op.drop_index(batch_op.f('ix_properties_sub_county'))
        batch_op.drop_index(batch_op.f('ix_properties_landlord_id'))
        batch_op.drop_index(batch_op.f('ix_properties_estate_neighborhood'))
        batch_op.drop_index(batch_op.f('ix_properties_county'))
        batch_op.drop_index(batch_op.f('ix_properties_city'))

    op.drop_table('properties')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_phone_number'))
        batch_op.drop_index(batch_op.f('ix_users_kra_pin'))
        batch_op.drop_index(batch_op.f('ix_users_is_active'))
        batch_op.drop_index(batch_op.f('ix_users_email'))

    op.drop_table('users')
    # ### end Alembic commands ###
