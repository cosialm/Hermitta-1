"""create landlord_bank_accounts table

Revision ID: 459b3bf9841b
Revises: 4235f84e5eca
Create Date: 2025-06-21 04:21:01.719075

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '459b3bf9841b'
down_revision = '4235f84e5eca'
branch_labels = None
depends_on = None

bank_account_type_enum = sa.Enum('CHECKING', 'SAVINGS', 'BUSINESS', 'OTHER', name='bankaccounttype')

def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('landlord_bank_accounts',
    sa.Column('account_id', sa.Integer(), nullable=False),
    sa.Column('landlord_id', sa.Integer(), nullable=False),
    sa.Column('bank_name', sa.String(length=100), nullable=False),
    sa.Column('account_holder_name', sa.String(length=100), nullable=False),
    sa.Column('account_number', sa.String(length=50), nullable=False),
    sa.Column('branch_name', sa.String(length=100), nullable=True),
    sa.Column('swift_code', sa.String(length=20), nullable=True),
    sa.Column('account_type', bank_account_type_enum, nullable=True),
    sa.Column('is_primary', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['landlord_id'], ['users.user_id'], name=op.f('fk_landlord_bank_accounts_landlord_id_users')),
    sa.PrimaryKeyConstraint('account_id', name=op.f('pk_landlord_bank_accounts'))
    )
    op.create_index(op.f('ix_landlord_bank_accounts_is_primary'), 'landlord_bank_accounts', ['is_primary'], unique=False)
    op.create_index(op.f('ix_landlord_bank_accounts_landlord_id'), 'landlord_bank_accounts', ['landlord_id'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_landlord_bank_accounts_landlord_id'), table_name='landlord_bank_accounts')
    op.drop_index(op.f('ix_landlord_bank_accounts_is_primary'), table_name='landlord_bank_accounts')
    op.drop_table('landlord_bank_accounts')
    # bank_account_type_enum.drop(op.get_bind(), checkfirst=False) # For PostgreSQL, commented for SQLite
    # ### end Alembic commands ###
