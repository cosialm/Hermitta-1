"""create document table and convert Document to SQLAlchemy model

Revision ID: fb735da4134d
Revises: 459b3bf9841b
Create Date: 2025-06-21 04:43:19.450513

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'fb735da4134d'
down_revision = '459b3bf9841b'
branch_labels = None
depends_on = None

document_type_enum = sa.Enum(
    'LEASE_AGREEMENT', 'LEASE_ADDENDUM', 'INSPECTION_REPORT_MOVE_IN', 'INSPECTION_REPORT_MOVE_OUT',
    'RENTAL_APPLICATION_FORM_SUBMITTED', 'SCREENING_REPORT_CREDIT', 'SCREENING_REPORT_BACKGROUND',
    'INVOICE_VENDOR', 'RECEIPT_EXPENSE', 'RECEIPT_PAYMENT_FROM_TENANT', 'PROPERTY_PHOTO_GENERAL',
    'MAINTENANCE_ISSUE_PHOTO', 'MAINTENANCE_COMPLETION_PHOTO', 'MAINTENANCE_INVOICE_RECEIPT',
    'INSURANCE_POLICY_PROPERTY', 'NOTICE_TO_TENANT_GENERAL', 'TENANT_ID_DOCUMENT',
    'LANDLORD_KRA_PIN_CERT', 'OTHER',
    name='documenttype'
)

def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('documents',
    sa.Column('document_id', sa.Integer(), nullable=False),
    sa.Column('uploader_user_id', sa.Integer(), nullable=False),
    sa.Column('document_name', sa.String(length=255), nullable=False),
    sa.Column('document_type', document_type_enum, nullable=False),
    sa.Column('file_url', sa.String(length=1024), nullable=False),
    sa.Column('file_mime_type', sa.String(length=100), nullable=True),
    sa.Column('file_size_bytes', sa.Integer(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('property_id', sa.Integer(), nullable=True),
    sa.Column('lease_id', sa.Integer(), nullable=True),
    sa.Column('rental_application_id', sa.Integer(), nullable=True),
    sa.Column('maintenance_request_id', sa.Integer(), nullable=True),
    sa.Column('financial_transaction_id', sa.Integer(), nullable=True),
    sa.Column('folder_id', sa.Integer(), nullable=True),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.Column('expiry_date', sa.Date(), nullable=True),
    sa.Column('reminder_date_for_expiry', sa.Date(), nullable=True),
    sa.Column('uploaded_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['financial_transaction_id'], ['financial_transactions.transaction_id'], name=op.f('fk_documents_financial_transaction_id_financial_transactions')),
    sa.ForeignKeyConstraint(['folder_id'], ['document_folders.folder_id'], name=op.f('fk_documents_folder_id_document_folders')),
    sa.ForeignKeyConstraint(['lease_id'], ['leases.lease_id'], name=op.f('fk_documents_lease_id_leases')),
    sa.ForeignKeyConstraint(['maintenance_request_id'], ['maintenance_requests.request_id'], name=op.f('fk_documents_maintenance_request_id_maintenance_requests')),
    sa.ForeignKeyConstraint(['property_id'], ['properties.property_id'], name=op.f('fk_documents_property_id_properties')),
    sa.ForeignKeyConstraint(['rental_application_id'], ['rental_applications.application_id'], name=op.f('fk_documents_rental_application_id_rental_applications')),
    sa.ForeignKeyConstraint(['uploader_user_id'], ['users.user_id'], name=op.f('fk_documents_uploader_user_id_users')),
    sa.PrimaryKeyConstraint('document_id', name=op.f('pk_documents'))
    )
    op.create_index(op.f('ix_documents_document_type'), 'documents', ['document_type'], unique=False)
    op.create_index(op.f('ix_documents_expiry_date'), 'documents', ['expiry_date'], unique=False)
    op.create_index(op.f('ix_documents_financial_transaction_id'), 'documents', ['financial_transaction_id'], unique=False)
    op.create_index(op.f('ix_documents_folder_id'), 'documents', ['folder_id'], unique=False)
    op.create_index(op.f('ix_documents_lease_id'), 'documents', ['lease_id'], unique=False)
    op.create_index(op.f('ix_documents_maintenance_request_id'), 'documents', ['maintenance_request_id'], unique=False)
    op.create_index(op.f('ix_documents_property_id'), 'documents', ['property_id'], unique=False)
    op.create_index(op.f('ix_documents_rental_application_id'), 'documents', ['rental_application_id'], unique=False)
    op.create_index(op.f('ix_documents_uploader_user_id'), 'documents', ['uploader_user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_documents_uploader_user_id'), table_name='documents')
    op.drop_index(op.f('ix_documents_rental_application_id'), table_name='documents')
    op.drop_index(op.f('ix_documents_property_id'), table_name='documents')
    op.drop_index(op.f('ix_documents_maintenance_request_id'), table_name='documents')
    op.drop_index(op.f('ix_documents_lease_id'), table_name='documents')
    op.drop_index(op.f('ix_documents_folder_id'), table_name='documents')
    op.drop_index(op.f('ix_documents_financial_transaction_id'), table_name='documents')
    op.drop_index(op.f('ix_documents_expiry_date'), table_name='documents')
    op.drop_index(op.f('ix_documents_document_type'), table_name='documents')
    op.drop_table('documents')
    # document_type_enum.drop(op.get_bind(), checkfirst=False) # Already commented for SQLite
    # ### end Alembic commands ###
