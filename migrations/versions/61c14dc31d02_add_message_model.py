"""add message model

Revision ID: 61c14dc31d02
Revises: 7820b5bbc25f
Create Date: 2025-06-21 03:11:19.922712

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '61c14dc31d02'
down_revision = '7820b5bbc25f'
branch_labels = None
depends_on = None

message_type_enum = sa.Enum('DIRECT_MESSAGE', 'LEASE_MESSAGE', 'PROPERTY_INQUIRY_RESPONSE', 'MAINTENANCE_COMMUNICATION', 'SYSTEM_NOTIFICATION', 'BROADCAST_MESSAGE', name='messagetype')
message_status_enum = sa.Enum('SENT', 'DELIVERED_TO_SERVER', 'DELIVERED_TO_RECIPIENT', 'READ', 'FAILED_TO_SEND', 'ARCHIVED', 'DELETED_BY_SENDER', 'DELETED_BY_RECEIVER', name='messagestatus')


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('messages',
    sa.Column('message_id', sa.Integer(), nullable=False),
    sa.Column('sender_id', sa.Integer(), nullable=False),
    sa.Column('receiver_id', sa.Integer(), nullable=False),
    sa.Column('lease_id', sa.Integer(), nullable=True),
    sa.Column('property_id', sa.Integer(), nullable=True),
    sa.Column('conversation_id', sa.String(length=255), nullable=True),
    sa.Column('subject', sa.String(length=255), nullable=True),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('message_type', message_type_enum, nullable=False),
    sa.Column('status', message_status_enum, nullable=False),
    sa.Column('sent_at', sa.DateTime(), nullable=False),
    sa.Column('read_at', sa.DateTime(), nullable=True),
    sa.Column('has_attachments', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['lease_id'], ['leases.lease_id'], name=op.f('fk_messages_lease_id_leases')),
    sa.ForeignKeyConstraint(['property_id'], ['properties.property_id'], name=op.f('fk_messages_property_id_properties')),
    sa.ForeignKeyConstraint(['receiver_id'], ['users.user_id'], name=op.f('fk_messages_receiver_id_users')),
    sa.ForeignKeyConstraint(['sender_id'], ['users.user_id'], name=op.f('fk_messages_sender_id_users')),
    sa.PrimaryKeyConstraint('message_id', name=op.f('pk_messages'))
    )
    op.create_index(op.f('ix_messages_conversation_id'), 'messages', ['conversation_id'], unique=False)
    op.create_index(op.f('ix_messages_lease_id'), 'messages', ['lease_id'], unique=False)
    op.create_index(op.f('ix_messages_property_id'), 'messages', ['property_id'], unique=False)
    op.create_index(op.f('ix_messages_receiver_id'), 'messages', ['receiver_id'], unique=False)
    op.create_index(op.f('ix_messages_sender_id'), 'messages', ['sender_id'], unique=False)
    op.create_index(op.f('ix_messages_status'), 'messages', ['status'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_messages_status'), table_name='messages')
    op.drop_index(op.f('ix_messages_sender_id'), table_name='messages')
    op.drop_index(op.f('ix_messages_receiver_id'), table_name='messages')
    op.drop_index(op.f('ix_messages_property_id'), table_name='messages')
    op.drop_index(op.f('ix_messages_lease_id'), table_name='messages')
    op.drop_index(op.f('ix_messages_conversation_id'), table_name='messages')
    op.drop_table('messages')

    # Drop Enums (PostgreSQL specific, might need adjustment for other DBs like SQLite)
    message_type_enum.drop(op.get_bind(), checkfirst=False)
    message_status_enum.drop(op.get_bind(), checkfirst=False)
    # ### end Alembic commands ###
