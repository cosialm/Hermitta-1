"""add notification and notification_template models

Revision ID: dc8c45dcfe20
Revises: 61c14dc31d02
Create Date: 2025-06-21 03:26:27.205092

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'dc8c45dcfe20'
down_revision = '61c14dc31d02'
branch_labels = None
depends_on = None

# Define SA Enums based on models.enums
notification_channel_enum = sa.Enum('EMAIL', 'SMS', 'IN_APP', name='notificationchannel')
notification_type_enum = sa.Enum(
    'WELCOME_MESSAGE', 'ACCOUNT_ACTIVATION', 'PASSWORD_RESET_REQUEST', 'PASSWORD_CHANGED_CONFIRMATION',
    'EMAIL_VERIFICATION', 'PROFILE_UPDATE_CONFIRMATION', 'LEASE_AGREEMENT_SHARED', 'LEASE_SIGNED_CONFIRMATION',
    'LEASE_RENEWAL_REMINDER', 'LEASE_EXPIRATION_REMINDER', 'LEASE_TERMINATION_NOTICE', 'MOVE_IN_REMINDER',
    'MOVE_OUT_REMINDER', 'RENT_REMINDER', 'RENT_OVERDUE_NOTICE', 'PAYMENT_RECEIVED_CONFIRMATION',
    'PAYMENT_FAILED_ALERT', 'INVOICE_GENERATED', 'REFUND_PROCESSED', 'MAINTENANCE_REQUEST_RECEIVED',
    'MAINTENANCE_STATUS_UPDATE', 'MAINTENANCE_QUOTE_AVAILABLE', 'MAINTENANCE_FEEDBACK_REQUEST',
    'NEW_MESSAGE_ALERT', 'NEW_DOCUMENT_SHARED', 'DOCUMENT_EXPIRING_SOON', 'NEW_PROPERTY_LISTING_MATCH',
    'PROPERTY_VIEWING_CONFIRMATION', 'PROPERTY_VIEWING_REMINDER', 'APPLICATION_RECEIVED_CONFIRMATION',
    'APPLICATION_STATUS_UPDATE', 'SYSTEM_ALERT', 'BROADCAST_ANNOUNCEMENT', 'OTHER',
    name='notificationtype'
)
notification_status_enum = sa.Enum(
    'SCHEDULED', 'PENDING', 'SENT', 'FAILED', 'DELIVERED', 'DELIVERY_FAILURE', 'READ',
    'ARCHIVED', 'CANCELLED', 'INVALID_ADDRESS',
    name='notificationstatus'
)


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('notification_templates',
    sa.Column('template_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('template_type', notification_type_enum, nullable=False),
    sa.Column('channel', notification_channel_enum, nullable=False),
    sa.Column('subject_template_en', sa.Text(), nullable=True),
    sa.Column('body_template_en', sa.Text(), nullable=False),
    sa.Column('subject_template_sw', sa.Text(), nullable=True),
    sa.Column('body_template_sw', sa.Text(), nullable=True),
    sa.Column('required_placeholders', sa.JSON(), nullable=True),
    sa.Column('is_system_template', sa.Boolean(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('template_id', name=op.f('pk_notification_templates')),
    sa.UniqueConstraint('name', name=op.f('uq_notification_templates_name'))
    )
    op.create_index(op.f('ix_notification_templates_channel'), 'notification_templates', ['channel'], unique=False)
    op.create_index(op.f('ix_notification_templates_is_active'), 'notification_templates', ['is_active'], unique=False)
    op.create_index(op.f('ix_notification_templates_template_type'), 'notification_templates', ['template_type'], unique=False)

    op.create_table('notifications',
    sa.Column('notification_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('notification_type', notification_type_enum, nullable=False),
    sa.Column('channel', notification_channel_enum, nullable=False),
    sa.Column('subject', sa.Text(), nullable=True),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('template_id', sa.Integer(), nullable=True),
    sa.Column('template_context', sa.JSON(), nullable=True),
    sa.Column('status', notification_status_enum, nullable=False),
    sa.Column('scheduled_send_time', sa.DateTime(), nullable=True),
    sa.Column('sent_at', sa.DateTime(), nullable=True),
    sa.Column('delivered_at', sa.DateTime(), nullable=True),
    sa.Column('read_at', sa.DateTime(), nullable=True),
    sa.Column('lease_id', sa.Integer(), nullable=True),
    sa.Column('payment_id', sa.Integer(), nullable=True),
    sa.Column('message_id', sa.Integer(), nullable=True),
    sa.Column('maintenance_request_id', sa.Integer(), nullable=True),
    sa.Column('document_id', sa.Integer(), nullable=True),
    sa.Column('related_entity_type', sa.String(length=100), nullable=True),
    sa.Column('related_entity_id', sa.Integer(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('external_id', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['document_id'], ['documents.document_id'], name=op.f('fk_notifications_document_id_documents')),
    sa.ForeignKeyConstraint(['lease_id'], ['leases.lease_id'], name=op.f('fk_notifications_lease_id_leases')),
    sa.ForeignKeyConstraint(['maintenance_request_id'], ['maintenance_requests.request_id'], name=op.f('fk_notifications_maintenance_request_id_maintenance_requests')),
    sa.ForeignKeyConstraint(['message_id'], ['messages.message_id'], name=op.f('fk_notifications_message_id_messages')),
    sa.ForeignKeyConstraint(['payment_id'], ['payments.payment_id'], name=op.f('fk_notifications_payment_id_payments')),
    sa.ForeignKeyConstraint(['template_id'], ['notification_templates.template_id'], name=op.f('fk_notifications_template_id_notification_templates')),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], name=op.f('fk_notifications_user_id_users')),
    sa.PrimaryKeyConstraint('notification_id', name=op.f('pk_notifications'))
    )
    op.create_index(op.f('ix_notifications_channel'), 'notifications', ['channel'], unique=False)
    op.create_index(op.f('ix_notifications_document_id'), 'notifications', ['document_id'], unique=False)
    op.create_index(op.f('ix_notifications_external_id'), 'notifications', ['external_id'], unique=False)
    op.create_index(op.f('ix_notifications_lease_id'), 'notifications', ['lease_id'], unique=False)
    op.create_index(op.f('ix_notifications_maintenance_request_id'), 'notifications', ['maintenance_request_id'], unique=False)
    op.create_index(op.f('ix_notifications_message_id'), 'notifications', ['message_id'], unique=False)
    op.create_index(op.f('ix_notifications_notification_type'), 'notifications', ['notification_type'], unique=False)
    op.create_index(op.f('ix_notifications_payment_id'), 'notifications', ['payment_id'], unique=False)
    op.create_index(op.f('ix_notifications_read_at'), 'notifications', ['read_at'], unique=False)
    op.create_index(op.f('ix_notifications_scheduled_send_time'), 'notifications', ['scheduled_send_time'], unique=False)
    op.create_index(op.f('ix_notifications_status'), 'notifications', ['status'], unique=False)
    op.create_index(op.f('ix_notifications_template_id'), 'notifications', ['template_id'], unique=False)
    op.create_index(op.f('ix_notifications_user_id'), 'notifications', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_notifications_user_id'), table_name='notifications')
    op.drop_index(op.f('ix_notifications_template_id'), table_name='notifications')
    op.drop_index(op.f('ix_notifications_status'), table_name='notifications')
    op.drop_index(op.f('ix_notifications_scheduled_send_time'), table_name='notifications')
    op.drop_index(op.f('ix_notifications_read_at'), table_name='notifications')
    op.drop_index(op.f('ix_notifications_payment_id'), table_name='notifications')
    op.drop_index(op.f('ix_notifications_notification_type'), table_name='notifications')
    op.drop_index(op.f('ix_notifications_message_id'), table_name='notifications')
    op.drop_index(op.f('ix_notifications_maintenance_request_id'), table_name='notifications')
    op.drop_index(op.f('ix_notifications_lease_id'), table_name='notifications')
    op.drop_index(op.f('ix_notifications_external_id'), table_name='notifications')
    op.drop_index(op.f('ix_notifications_document_id'), table_name='notifications')
    op.drop_index(op.f('ix_notifications_channel'), table_name='notifications')
    op.drop_table('notifications')

    op.drop_index(op.f('ix_notification_templates_template_type'), table_name='notification_templates')
    op.drop_index(op.f('ix_notification_templates_is_active'), table_name='notification_templates')
    op.drop_index(op.f('ix_notification_templates_channel'), table_name='notification_templates')
    op.drop_table('notification_templates')

    # Drop Enums (PostgreSQL specific, adjust for other DBs)
    # Commenting out for SQLite compatibility, as these enums are represented as VARCHAR
    # and do not need to be explicitly dropped as separate types.
    # notification_channel_enum.drop(op.get_bind(), checkfirst=False)
    # notification_type_enum.drop(op.get_bind(), checkfirst=False)
    # notification_status_enum.drop(op.get_bind(), checkfirst=False)
    # ### end Alembic commands ###
